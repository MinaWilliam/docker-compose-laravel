version: "3.7"

services:
  app:
    build:
      context: ./docker/local/nginx
      dockerfile: nginx.dockerfile
    ports:
      - "${DOCKER_APP_PORT}:80"
    volumes:
      - ./:/var/www
    depends_on:
      - fpm
    networks:
      - internal

  fpm:
    build:
      context: ./docker/local/php
      dockerfile: php-fpm-xdebug.dockerfile
    volumes:
      - ./:/var/www
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      XDEBUG_SESSION: PHPSTORM
      XDEBUG_MODE: "${XDEBUG_MODE}" # set "debug" in override file to start debug
      PHP_IDE_CONFIG: "serverName=Docker"
    restart: always
    depends_on:
      - db
      - redis
    networks:
      - internal

  cli:
    build:
      context: ./docker/local/php
      dockerfile: php-cli.dockerfile
    environment:
      WWWUSER: '${WWWUSER}'
      XDEBUG_SESSION: PHPSTORM
      XDEBUG_MODE: "${CLI_XDEBUG_MODE}"
      PHP_IDE_CONFIG: "serverName=Docker"
    depends_on:
      - db
      - redis
    volumes:
      - ./:/var/www
    networks:
      - internal

  db:
    image: mysql:latest
    tty: true
    ports:
      - "${DOCKER_DB_PORT}:3306"
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}", "--password", "${DB_PASSWORD}" ]
    networks:
      - internal

  queue:
    build:
      context: ./docker/local/php
      dockerfile: php-cli.dockerfile
    depends_on:
      - db
      - redis
    restart: always
    volumes:
      - ./:/var/www
    networks:
      - internal
    command: "/bin/sh -c 'php artisan queue:listen --timeout=3600'"

  redis:
    image: redis:alpine
    ports:
      - "${DOCKER_REDIS_PORT}:6379"
    networks:
      - internal
    command: [ sh, -c, "rm -f /data/dump.rdb && redis-server --save" ]

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "${DOCKER_MAILHOG_DASHBOARD_PORT}:8025"
      - "${DOCKER_MAILHOG_PORT}:1025"
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  mysql:
    driver: local
